{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/App/App.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App/App.js","index.js","components/Filter/Filter.module.css"],"names":["module","exports","initalState","name","number","ContactForm","state","handleChacheForm","target","value","setState","handleFormSubmit","e","preventDefault","onAdd","props","validateForm","id","uuid","resetForm","onCheckContact","alert","this","className","s","form_wrapper","title","onSubmit","wrap__input","caption","input","type","placeholder","required","onChange","contactBtn","Component","ContacListItem","onRemove","btn__list","onClick","ContactList","contacts","length","map","contact","protoTypes","PropTypes","array","isRequired","func","Filter","filter","filter__wrap","filtter_title","filter__caption","filter_input","App","componentDidMount","userContacts","JSON","parse","localStorage","getItem","componentDidUpdate","prevProps","prevState","setItem","stringify","handleAddContact","newContact","handleCheckUContact","isExistContact","find","handleRemoveContact","handleFilterChange","getVisibleContacts","toLowerCase","includes","visibleContacts","app__wrap","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9741f0c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactBtn\":\"ContactForm_contactBtn__1QKp9\",\"stripes\":\"ContactForm_stripes__2Gwhm\",\"form_wrapper\":\"ContactForm_form_wrapper__2e88i\",\"title\":\"ContactForm_title__3MqSl\",\"input\":\"ContactForm_input__gm87B\",\"wrap__input\":\"ContactForm_wrap__input__s-2n_\",\"caption\":\"ContactForm_caption__3a2ub\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn__list\":\"ContactList_btn__list__3Sn5L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app__wrap\":\"App_app__wrap__2WNuc\"};","import { Component } from 'react';\nimport { v4 as uuid } from 'uuid';\n// import PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nconst initalState = {\n  name: '',\n  number: '',\n};\n\nclass ContactForm extends Component {\n  state = initalState;\n\n  handleChacheForm = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n\n    const { name, number } = this.state;\n    const { onAdd } = this.props;\n    const isvalidateForm = this.validateForm();\n\n    if (!isvalidateForm) return;\n\n    onAdd({ id: uuid(), name, number });\n    this.resetForm();\n  };\n\n  validateForm = () => {\n    const { name, number } = this.state;\n    const { onCheckContact } = this.props;\n    if (!name || !number) {\n      alert('Some filed is enpty');\n      return false;\n    }\n    return onCheckContact(name);\n  };\n\n  resetForm = () => this.setState(initalState);\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <div className={s.form_wrapper}>\n        <h1 className={s.title}>Phonebook</h1>\n        <form onSubmit={this.handleFormSubmit}>\n          <div className={s.wrap__input}>\n            <p className={s.caption}>Number</p>\n            <input\n              className={s.input}\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Enter name\"\n              required\n              value={name}\n              onChange={this.handleChacheForm}\n            />\n            <p className={s.caption}>Name</p>\n            <input\n              className={s.input}\n              type=\"tel\"\n              name={'number'}\n              placeholder=\"Enter number\"\n              value={number}\n              onChange={this.handleChacheForm}\n              required\n            />\n          </div>\n\n          <button className={s.contactBtn} type=\"submit\">\n            Add Contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ContactForm;\n","import s from './ContactList.module.css';\nimport PropTypes from 'prop-types';\nconst ContacListItem = ({ id, name, number, onRemove }) => {\n  return (\n    <li>\n      {name}: {number}{' '}\n      <button className={s.btn__list} onClick={() => onRemove(id)}>\n        delete\n      </button>\n    </li>\n  );\n};\n\nconst ContactList = ({ contacts, onRemove }) => {\n  if (contacts.length === 0) return null;\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <ContacListItem {...contact} onRemove={onRemove} />\n      ))}\n    </ul>\n  );\n};\nContactList.protoTypes = {\n  contacts: PropTypes.array.isRequired,\n  ContacListItem: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import s from './Filter.module.css';\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <div className={s.filter__wrap}>\n      <h2 className={s.filtter_title}>Contacts</h2>\n      <p className={s.filter__caption}>Find contacts by name</p>\n      <input\n        className={s.filter_input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={({ target }) => onChange(target.value)}\n        placeholder=\"Enter name for Search\"\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import { Component } from 'react';\n\nimport ContactForm from '../ContactForm';\nimport ContactList from '../ContactList';\nimport Filter from '../Filter';\n\nimport s from './App.module.css';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount = () => {\n    const userContacts = JSON.parse(localStorage.getItem('userContacts'));\n    if (userContacts) this.setState({ contacts: userContacts });\n  };\n\n  componentDidUpdate = (prevProps, prevState) => {\n    const { contacts } = this.state;\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem('userContacts', JSON.stringify(contacts));\n    }\n  };\n\n  handleAddContact = newContact =>\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, newContact],\n    }));\n\n  handleCheckUContact = name => {\n    const { contacts } = this.state;\n    const isExistContact = !!contacts.find(contacts => contacts.name === name);\n\n    isExistContact && alert('Contact is already exist');\n    return !isExistContact;\n  };\n\n  handleRemoveContact = id =>\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== id),\n    }));\n\n  handleFilterChange = filter => this.setState({ filter });\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div className={s.app__wrap}>\n        <ContactForm\n          onAdd={this.handleAddContact}\n          onCheckContact={this.handleCheckUContact}\n        />\n\n        <Filter filter={filter} onChange={this.handleFilterChange} />\n        <ContactList\n          contacts={visibleContacts}\n          onRemove={this.handleRemoveContact}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__wrap\":\"Filter_filter__wrap__2bCKH\",\"filtter_title\":\"Filter_filtter_title__20ZWa\",\"filter_input\":\"Filter_filter_input__2k0eq\",\"filter__caption\":\"Filter_filter__caption__1WL5U\"};"],"sourceRoot":""}